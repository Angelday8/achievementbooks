buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.8"
    id 'net.nemerosa.versioning' version '2.0.0'
}

apply plugin: 'forge'


boolean dev = System.getenv("RELEASE") == null || System.getenv("RELEASE").equalsIgnoreCase("false")

minecraft {
    version = "${minecraft_version}-${forge_version}-${minecraft_version}"
    runDir = "eclipse"

    replace "@VERSION@", project.version
    replaceIn "AchievementBooksMod.java"
}

group= "com.stateshifterlabs.achievementbooks"
archivesBaseName = "achievementbooks"
version = "MC${minecraft_version}-${mod_version}-B${versioning.info.build}"


processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

tasks.curseforge.enabled = !dev && project.hasProperty('curseforge_key')

curseforge {
    if (project.hasProperty('curseforge_key')) {
        apiKey = project.curseforge_key
    }

    project {
        id = project.projectId
        changelog = file("CHANGELOG.md")
        changelogType = 'markdown'
        releaseType = project.release_type
        mainArtifact(jar) {
            displayName = "Achievement Books ${version}"
        }
    }
}


idea { module { inheritOutputDirs = true } }
