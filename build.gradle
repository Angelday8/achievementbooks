plugins {
    id "com.matthewprenger.cursegradle" version "1.0.8" apply false
}

subprojects {
    project.ext.modid = "achievementbooks"
    apply plugin: "java"
}

configure(subprojects.findAll { it.name != 'core' }) {
    dependencies {
        compile project(":core")

    }

    apply plugin: 'com.matthewprenger.cursegradle'

    boolean dev = System.getenv("RELEASE") == null || System.getenv("RELEASE").equalsIgnoreCase("false")


    tasks.curseforge.enabled = !dev && project.hasProperty('curseforge_key')

    curseforge {
        if (project.hasProperty('curseforge_key')) {
            apiKey = project.curseforge_key
        }

        project {
            id = project.projectId
            changelog = file("CHANGELOG.md")
            changelogType = 'markdown'
            releaseType = project.release_type
            mainArtifact(jar) {
                displayName = "Achievement Books ${version}"
            }
        }
    }
}

def getVersionAppendage() {
    def proc = "git rev-parse --short HEAD".execute()
    proc.waitFor()
    return proc.exitValue() ? "GITBORK" : proc.text.trim()
}

String distDir = System.getenv("DIST_DIR");
if(distDir == null) {
    distDir="dist"
}

task collect(type: Copy) {

    from(subprojects.collect { "${it.buildDir}/libs" })
    into distDir


}
